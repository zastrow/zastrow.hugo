@if $sparkle-show-docs {
  /* ---
  title: Loop Media Query Mixin
  name: loop-mq-mixin
  section: Tools
  ---

  Auto-generates media queries for looping content.

  **Use**
  ```scss
  .my-class {
    @include loop-mq {
      prop: value;
    }
  }
  ```

  **Use with a prop**
  ```scss
  .my-class {
    @include loop-mq {
      margin: 1rem;
    }
  }
  ```

  **CSS Output**
  ```css
  .my-class {
    margin: 1rem;
  }
  @media (min-width: 40rem) {
    .my-class\@sm {
      margin: 1rem;
    }
  }
  @media (min-width: 60rem) {
    .my-class\@md {
      margin: 1rem;
    }
  }
  @media (min-width: 80rem) {
    .my-class\@lg {
      margin: 1rem;
    }
  }
  ```

  **Note:** when using these classes in HTML, the `@` does not need to be escaped. Here's an example:

  ```
  <p class="my-class@lg">No need to escape the @ symbol</p>
  ```

  */
}

@mixin loop-mq {
  @content;
  @if settings(loop-mq) {
    @each $key, $val in $media-queries {
      // Checks that the media query is a number
      @if $val != $val + "" {
        @media (min-width: #{$val}) {
          &\@#{$key} {
            @content;
          }
        }
      }
      @else {
        @if settings('print-classes') {
          @media print {
            &\@print {
              @content;
            }
          }
        }
      }
    }
  }
}
