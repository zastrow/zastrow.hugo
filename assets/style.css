/*    Introduction
 *    Welcome to the CSS file! This is subjectively the most exciting code
 *    of the website. Here we bring together the visual style of the website.
 *
 *    Our CSS is organized using Harry Roberts' (csswizardry.com) Inverted
 *    Triangle CSS (ITCSS) organizational approach. This method is mixed with
 *    Block Element Modifier (BEM) naming convention for class names throughout
 *    the stylesheet.
 *
 *    Table of Contents:
 * 1. Settings
 * 2. Tools
 * 3. Generic
 * 4. Elements
 * 5. Objects
 * 6. Components
 * 7. Vendors
 * 8. Utilities
 */

/* =====================================================================
 * 1. Settings
 *    When using a preprocessor, settings are used to define variable.
 *    This puts variables at the top of the cascade so they are accessible
 *    to all partials further down. No CSS selectors should be generated
 *    by the preprocessor from partials in this section.
 *
 *    When not using a preprocessor, the settings area is a good place
 *    to write comments describing the colors and font stacks as a guide.
 *    If using features such as custom properties, those that are global
 *    custom properties should be described in this section.
 */
@import "settings/_breakpoints.css";

/* =====================================================================
 * 2. Tools
 *    This section is specifically for preprocessor global mixins and
 *    functions. No CSS should be generated by the preprocessor from
 *    partials in this section.
 */

/* =====================================================================
 * 3. Generic
 *    Here we define any generic styles that are not specific to the styles of
 *    the site. This section should include any Reset or Normalize libraries
 *    and any preferential base styles for elements. There shouldnâ€™t be any
 *    classes or ids used in this section.
	*/
@import "generic/_normalize.css";

/* =====================================================================
 * 4. Elements
 *    Styling for bare HTML elements (like H1, A, etc.). These come with
 *    default styling from the browser so we can redefine them here.
 */
@import "elements/_root.css";
@import "elements/_body.css";
@import "elements/_img.css";
@import "elements/_a.css";
@import "elements/_hx.css";
@import "elements/_p.css";
@import "elements/_li.css";

/* =====================================================================
 * 5. Objects
 *    Class-based selectors which define undecorated design patterns,
 *    for example media object known from OOCSS.
 */
@import "object/_general.css";
@import "object/_gradient.css";
@import "object/_grid.css";
@import "object/_grid.css";
@import "object/_section.css";

/* =====================================================================
 * 6. Components
 *    Specific UI components. This is where majority of our work takes place
 *    and our UI components are often composed of Objects and Components
 */
@import "components/_site-header.css";
@import "components/_skip-link.css";
@import "components/_logo.css";
@import "components/_title.css";
@import "components/_site-header.css";
@import "components/_button.css";
@import "components/_article-card.css";
@import "components/_video-list.css";
@import "components/_projects-list.css";
@import "components/_about.css";
@import "components/_footer.css";
@import "components/_pie-chart.css";
@import "components/_article-list-item.css";
@import "components/_pagination.css";
@import "components/_post-card.css";

/* =====================================================================
 * 7. Vendors
 *    Whenever third party styles are needed add them to this section,
 *    below the Components, but above the Utilities. This allows them
 *    to live alongside our styles but still be overridden if needed by
 *    a utility class.
 */

/* =====================================================================
 * 8. Utilities
 *    Utilities and helper classes with ability to override anything
 *    which goes before in the triangle, eg. hide helper class
 */
@import "utilities/_visually-hidden.css";
@import "utilities/_spacing.css";
